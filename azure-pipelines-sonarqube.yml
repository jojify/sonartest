# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: SonarQubePrepare@4
  inputs:
    SonarQube: 'sonartest'
    scannerMode: 'MSBuild'
    projectKey: 'e58b17a1579fa6068fedd6f9207e4e332bb143c7'
    projectName: 'sonartest'
    extraProperties: 'sonar.cs.vstest.reportsPaths=$(Agent.TempDirectory)\TestResults\*.trx'
            
- task: VSBuild@1
  inputs:
    solution: '**\*.sln'

- task: VSTest@2
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: |
      **\*test*.dll
      !**\*TestAdapter.dll
      !**\obj\**
    searchFolder: '$(System.DefaultWorkingDirectory)'
    runInParallel: true
    codeCoverageEnabled: true



- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      function ConvertCodeCoverageFiles($path) {
          Get-ChildItem -Recurse -Filter "*.coverage" | Foreach-Object {
              $outfile = "$([System.IO.Path]::GetFileNameWithoutExtension($_.FullName)).coveragexml"
              $output = [System.IO.Path]::Combine([System.IO.Path]::GetDirectoryName($_.FullName), $outfile)
              & $path analyze /output:$output $_.FullName 
              Write-Output $_.FullName
          }
      }
      Get-ChildItem -Recurse | Where-Object { $_.PsIsContainer -and $_.FullName -notmatch 'amd64' } | Foreach-Object {
          if ( "packages" -eq $_.name ) {
               Get-ChildItem -Exclude "amd64" -Path $_.FullName -recurse -Filter "*.exe" | Where {$_.FullName -notlike "*\amd64\*.exe"} | Foreach-Object {
                      # $outfile = "$([System.IO.Path]::GetFileName($_.FullName))"
                      # Write-Output $outfile
                      # Write-Output $_.name
                      ConvertCodeCoverageFiles($_.FullName)
                      Write-Output $_.FullName
              }
          }
      }

- task: SonarQubeAnalyze@4

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'VSTest'
    testResultsFiles: '**/*.trx'
    searchFolder: '$(Agent.TempDirectory)\TestResults'

- task: SonarQubePublish@4
  inputs:
    pollingTimeoutSec: '300'